[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "jenkins-mcp-server"
version = "1.0.0"
description = "MCP server for Jenkins integration with AI assistants, providing build management, log analysis, and failure diagnostics."
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.8"
keywords = ["jenkins", "mcp", "ai", "devops", "model-context-protocol"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "python-jenkins>=1.8.2",
    "requests>=2.31.0",
    "sentence-transformers>=2.2.0",
    "qdrant-client>=1.14.3",
    "tiktoken>=0.5.0",
    "APScheduler>=3.11.0",
    "modelcontextprotocol>=0.1.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0"
]

[tool.setuptools]
packages = ["mcp_server"]

[tool.setuptools.package-data]
mcp_server = ["diagnostic_config/diagnostic-parameters.yml"]

[project.scripts]
jenkins-mcp-server = "mcp_server.server:main" 